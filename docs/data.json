{
    "project": {
        "name": "array-diff",
        "description": "Array diff function for JavaScript",
        "version": "0.0.1",
        "logo": "../img/logo.png",
        "url": "https://github.com/tenntenn/array-diff"
    },
    "files": {
        "dist/build.js": {
            "name": "dist/build.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/almond.js": {
            "name": "lib/almond.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/base/ArrayDiff.js": {
            "name": "src/base/ArrayDiff.js",
            "modules": {},
            "classes": {
                "base.ArrayDiff": 1
            },
            "fors": {},
            "namespaces": {
                "base": 1
            }
        },
        "src/base/Command.js": {
            "name": "src/base/Command.js",
            "modules": {},
            "classes": {
                "base.Command": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/base/CommandType.js": {
            "name": "src/base/CommandType.js",
            "modules": {},
            "classes": {
                "base.CommandType": 1
            },
            "fors": {},
            "namespaces": {
                "base": 1
            }
        },
        "src/base/EditScript.js": {
            "name": "src/base/EditScript.js",
            "modules": {},
            "classes": {
                "base.EditScript": 1
            },
            "fors": {},
            "namespaces": {
                "base": 1
            }
        },
        "test/js/mocha.js": {
            "name": "test/js/mocha.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "base.ArrayDiff": {
            "name": "base.ArrayDiff",
            "shortname": "base.ArrayDiff",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "base",
            "file": "src/base/ArrayDiff.js",
            "line": 10,
            "description": "Diffrence of given two arrays.",
            "access": "public",
            "tagname": "",
            "is_constructor": 1,
            "params": [
                {
                    "name": "array1",
                    "description": "array",
                    "type": "Array"
                },
                {
                    "name": "array2",
                    "description": "array",
                    "type": "Array"
                }
            ]
        },
        "base.Command": {
            "name": "base.Command",
            "shortname": "Command",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "base",
            "file": "src/base/Command.js",
            "line": 8,
            "is_constructor": 1,
            "params": [
                {
                    "name": "type",
                    "description": "type of this command",
                    "type": "base.CommandType"
                },
                {
                    "name": "index",
                    "description": "index of target of this command",
                    "type": "Number"
                },
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Array"
                }
            ]
        },
        "base.CommandType": {
            "name": "base.CommandType",
            "shortname": "base.CommandType",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "base",
            "file": "src/base/CommandType.js",
            "line": 6,
            "description": "Command type.",
            "access": "public",
            "tagname": ""
        },
        "base.EditScript": {
            "name": "base.EditScript",
            "shortname": "base.EditScript",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "base",
            "file": "src/base/EditScript.js",
            "line": 8,
            "description": "EditScript of an array difference.",
            "is_constructor": 1
        }
    },
    "classitems": [
        {
            "file": "dist/build.js",
            "line": 1,
            "description": "almond 0.2.0 Copyright (c) 2011, The Dojo Foundation All Rights Reserved.\nAvailable via the MIT or new BSD license.\nsee: http://github.com/jrburke/almond for details",
            "class": "base.ArrayDiff"
        },
        {
            "file": "lib/almond.js",
            "line": 1,
            "description": "almond 0.2.0 Copyright (c) 2011, The Dojo Foundation All Rights Reserved.\nAvailable via the MIT or new BSD license.\nsee: http://github.com/jrburke/almond for details",
            "class": "base.ArrayDiff"
        },
        {
            "file": "lib/almond.js",
            "line": 20,
            "description": "Given a relative module name, like ./something, normalize it to\na real name that can be mapped to a path.",
            "params": [
                {
                    "name": "name",
                    "description": "the relative name",
                    "type": "String"
                },
                {
                    "name": "baseName",
                    "description": "a real name that the name arg is relative\nto.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "normalized name",
                "type": "String"
            },
            "class": "base.ArrayDiff"
        },
        {
            "file": "lib/almond.js",
            "line": 179,
            "description": "Makes a name map, normalizing the name, and using a plugin\nfor normalization if necessary. Grabs a ref to plugin\ntoo, as an optimization.",
            "class": "base.ArrayDiff"
        },
        {
            "file": "lib/almond.js",
            "line": 359,
            "description": "Just drops the config on the floor, but returns req in case\nthe config return value is used.",
            "class": "base.ArrayDiff"
        },
        {
            "file": "src/base/ArrayDiff.js",
            "line": 29,
            "description": "EditScirpt of this diffrence.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "editscript",
            "type": "{base.EditScript}",
            "class": "base.ArrayDiff",
            "namespace": "base"
        },
        {
            "file": "src/base/ArrayDiff.js",
            "line": 37,
            "description": "Get composed edit script.\nIt must be called after calling base.EditScript.compose().",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "getEditScript",
            "return": {
                "description": "edit script",
                "type": "base.EditScript"
            },
            "class": "base.ArrayDiff",
            "namespace": "base"
        },
        {
            "file": "src/base/ArrayDiff.js",
            "line": 48,
            "itemtype": "method",
            "name": "compose",
            "return": {
                "description": "base.EditScript"
            },
            "class": "base.ArrayDiff",
            "namespace": "base"
        },
        {
            "file": "src/base/CommandType.js",
            "line": 14,
            "description": "It indicates Common command.",
            "access": "public",
            "tagname": "",
            "static": 1,
            "final": 1,
            "itemtype": "property",
            "name": "COMMON",
            "type": "CommandType",
            "class": "base.CommandType",
            "namespace": "base"
        },
        {
            "file": "src/base/CommandType.js",
            "line": 24,
            "description": "It indicates Add command.",
            "access": "public",
            "tagname": "",
            "static": 1,
            "final": 1,
            "itemtype": "property",
            "name": "ADD",
            "type": "CommandType",
            "class": "base.CommandType",
            "namespace": "base"
        },
        {
            "file": "src/base/CommandType.js",
            "line": 34,
            "description": "It indicates Delete command.",
            "access": "public",
            "tagname": "",
            "static": 1,
            "final": 1,
            "itemtype": "property",
            "name": "DELETE",
            "type": "CommandType",
            "class": "base.CommandType",
            "namespace": "base"
        },
        {
            "file": "src/base/EditScript.js",
            "line": 16,
            "description": "Common commands.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "commons",
            "type": "base.Command",
            "class": "base.EditScript",
            "namespace": "base"
        },
        {
            "file": "src/base/EditScript.js",
            "line": 24,
            "description": "Get common commands.",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "getCommonCommands",
            "return": {
                "description": "",
                "type": "Array<base.Command>"
            },
            "class": "base.EditScript",
            "namespace": "base"
        },
        {
            "file": "src/base/EditScript.js",
            "line": 34,
            "description": "Add commands.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "adds",
            "type": "base.Command",
            "class": "base.EditScript",
            "namespace": "base"
        },
        {
            "file": "src/base/EditScript.js",
            "line": 42,
            "description": "Get add commands.",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "getAddCommands",
            "return": {
                "description": "",
                "type": "Array<base.Command>"
            },
            "class": "base.EditScript",
            "namespace": "base"
        },
        {
            "file": "src/base/EditScript.js",
            "line": 52,
            "description": "Delete commands.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "deletes",
            "type": "base.Command",
            "class": "base.EditScript",
            "namespace": "base"
        },
        {
            "file": "src/base/EditScript.js",
            "line": 60,
            "description": "Get delete commands.",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "getDeleteCommands",
            "return": {
                "description": "",
                "type": "Array<base.Command>"
            },
            "class": "base.EditScript",
            "namespace": "base"
        },
        {
            "file": "src/base/EditScript.js",
            "line": 71,
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "push",
            "params": [
                {
                    "name": "command",
                    "description": "it will be added",
                    "type": "base.Command"
                }
            ],
            "class": "base.EditScript",
            "namespace": "base"
        },
        {
            "file": "src/base/EditScript.js",
            "line": 86,
            "description": "Apply patch a given array.",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "patch",
            "params": [
                {
                    "name": "array",
                    "description": "it will be apply patch",
                    "type": "Array"
                }
            ],
            "class": "base.EditScript",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 66,
            "description": "Module exports.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 72,
            "description": "Check if `obj` is an array.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 80,
            "description": "Event emitter constructor.",
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 88,
            "description": "Adds a listener.",
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 112,
            "description": "Adds a volatile listener.",
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 132,
            "description": "Removes a listener.",
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 169,
            "description": "Removes all listeners for an event.",
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 188,
            "description": "Gets all listeners for a certain event.",
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 210,
            "description": "Emits an event.",
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 255,
            "description": "Expose `Progress`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 261,
            "description": "Initialize a new `Progress` indicator.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 272,
            "description": "Set progress size to `n`.",
            "params": [
                {
                    "name": "n",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "for chaining",
                "type": "Progress"
            },
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 285,
            "description": "Set text to `str`.",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "for chaining",
                "type": "Progress"
            },
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 298,
            "description": "Set font size to `n`.",
            "params": [
                {
                    "name": "n",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "for chaining",
                "type": "Progress"
            },
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 311,
            "description": "Set font `family`.",
            "params": [
                {
                    "name": "family",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "for chaining",
                "type": "Progress"
            },
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 323,
            "description": "Update percentage to `n`.",
            "params": [
                {
                    "name": "n",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "for chaining",
                "type": "Progress"
            },
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 335,
            "description": "Draw on `ctx`.",
            "params": [
                {
                    "name": "ctx",
                    "description": "",
                    "type": "CanvasRenderingContext2d"
                }
            ],
            "return": {
                "description": "for chaining",
                "type": "Progress"
            },
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 395,
            "description": "Expose `Context`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 401,
            "description": "Initialize a new `Context`.",
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 409,
            "description": "Set or get the context `Runnable` to `runnable`.",
            "params": [
                {
                    "name": "runnable",
                    "description": "",
                    "type": "Runnable"
                }
            ],
            "return": {
                "description": "",
                "type": "Context"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 423,
            "description": "Set test timeout `ms`.",
            "params": [
                {
                    "name": "ms",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "self",
                "type": "Context"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 436,
            "description": "Set test slowness threshold `ms`.",
            "params": [
                {
                    "name": "ms",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "self",
                "type": "Context"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 449,
            "description": "Inspect the context void of `._runnable`.",
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 468,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 474,
            "description": "Expose `Hook`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 480,
            "description": "Initialize a new `Hook` with the given `title` and callback `fn`.",
            "params": [
                {
                    "name": "title",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 493,
            "description": "Inherit from `Runnable.prototype`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 501,
            "description": "Get or set the test `err`.",
            "params": [
                {
                    "name": "err",
                    "description": "",
                    "type": "Error"
                }
            ],
            "return": {
                "description": "",
                "type": "Error"
            },
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 524,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 531,
            "description": "BDD-style interface:\n\n     describe('Array', function(){\n       describe('#indexOf()', function(){\n         it('should return -1 when not present', function(){\n\n         });\n\n         it('should return the index when present', function(){\n\n         });\n       });\n     });",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 553,
            "description": "Execute before running tests.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 561,
            "description": "Execute after running tests.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 569,
            "description": "Execute before each test case.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 577,
            "description": "Execute after each test case.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 585,
            "description": "Describe a \"suite\" with the given `title`\nand callback `fn` containing nested suites\nand/or tests.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 599,
            "description": "Pending describe.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 613,
            "description": "Exclusive suite.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 622,
            "description": "Describe a specification or test-case\nwith the given `title` and callback `fn`\nacting as a thunk.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 636,
            "description": "Exclusive test-case.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 645,
            "description": "Pending test case.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 661,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 668,
            "description": "TDD-style interface:\n\n    exports.Array = {\n      '#indexOf()': {\n        'should return -1 when the value is not present': function(){\n          \n        },\n\n        'should return the correct index when the value is present': function(){\n          \n        }\n      }\n    };",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 733,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 740,
            "description": "QUnit-style interface:\n\n    suite('Array');\n    \n    test('#length', function(){\n      var arr = [1,2,3];\n      ok(arr.length == 3);\n    });\n    \n    test('#indexOf()', function(){\n      var arr = [1,2,3];\n      ok(arr.indexOf(1) == 0);\n      ok(arr.indexOf(2) == 1);\n      ok(arr.indexOf(3) == 2);\n    });\n    \n    suite('String');\n    \n    test('#length', function(){\n      ok('foo'.length == 3);\n    });",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 770,
            "description": "Execute before running tests.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 778,
            "description": "Execute after running tests.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 786,
            "description": "Execute before each test case.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 794,
            "description": "Execute after each test case.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 802,
            "description": "Describe a \"suite\" with the given `title`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 812,
            "description": "Describe a specification or test-case\nwith the given `title` and callback `fn`\nacting as a thunk.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 828,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 835,
            "description": "TDD-style interface:\n\n     suite('Array', function(){\n       suite('#indexOf()', function(){\n         suiteSetup(function(){\n\n         });\n         \n         test('should return -1 when not present', function(){\n\n         });\n\n         test('should return the index when present', function(){\n\n         });\n\n         suiteTeardown(function(){\n\n         });\n       });\n     });",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 865,
            "description": "Execute before each test case.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 873,
            "description": "Execute after each test case.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 881,
            "description": "Execute before the suite.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 889,
            "description": "Execute after the suite.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 897,
            "description": "Describe a \"suite\" with the given `title`\nand callback `fn` containing nested suites\nand/or tests.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 911,
            "description": "Exclusive test-case.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 920,
            "description": "Describe a specification or test-case\nwith the given `title` and callback `fn`\nacting as a thunk.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 932,
            "description": "Exclusive test-case.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 941,
            "description": "Pending test case.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 960,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 967,
            "description": "Expose `Mocha`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 973,
            "description": "Expose internals.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 987,
            "description": "Return image `name` path.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 999,
            "description": "Setup mocha with `options`.\n\nOptions:\n\n  - `ui` name \"bdd\", \"tdd\", \"exports\" etc\n  - `reporter` reporter instance, defaults to `mocha.reporters.Dot`\n  - `globals` array of accepted globals\n  - `timeout` timeout in milliseconds\n  - `slow` milliseconds to wait before considering a test slow\n  - `ignoreLeaks` ignore global leaks\n  - `grep` string or regexp to filter tests with",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1028,
            "description": "Add test `file`.",
            "params": [
                {
                    "name": "file",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1040,
            "description": "Set reporter to `reporter`, defaults to \"dot\".",
            "params": [
                {
                    "name": "reporter",
                    "description": "name of a reporter or a reporter constructor",
                    "type": "String|Function"
                }
            ],
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1062,
            "description": "Set test UI `name`, defaults to \"bdd\".",
            "params": [
                {
                    "name": "bdd",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1077,
            "description": "Load registered files.",
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1096,
            "description": "Enable growl support.",
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1120,
            "description": "Add regexp to grep, if `re` is a string it is escaped.",
            "params": [
                {
                    "name": "re",
                    "description": "",
                    "type": "RegExp|String"
                }
            ],
            "return": {
                "description": "",
                "type": "Mocha"
            },
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1135,
            "description": "Invert `.grep()` matches.",
            "return": {
                "description": "",
                "type": "Mocha"
            },
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1147,
            "description": "Ignore global leaks.",
            "return": {
                "description": "",
                "type": "Mocha"
            },
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1159,
            "description": "Enable global leak checking.",
            "return": {
                "description": "",
                "type": "Mocha"
            },
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1171,
            "description": "Enable growl support.",
            "return": {
                "description": "",
                "type": "Mocha"
            },
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1183,
            "description": "Ignore `globals` array or string.",
            "params": [
                {
                    "name": "globals",
                    "description": "",
                    "type": "Array|String"
                }
            ],
            "return": {
                "description": "",
                "type": "Mocha"
            },
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1196,
            "description": "Set the timeout in milliseconds.",
            "params": [
                {
                    "name": "timeout",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Mocha"
            },
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1209,
            "description": "Set slowness threshold in milliseconds.",
            "params": [
                {
                    "name": "slow",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Mocha"
            },
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1222,
            "description": "Makes all tests async (accepting a callback)",
            "return": {
                "description": "",
                "type": "Mocha"
            },
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1234,
            "description": "Run tests and invoke `fn()` when complete.",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Runner"
            },
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1260,
            "description": "Helpers.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1269,
            "description": "Parse or format the given `val`.",
            "params": [
                {
                    "name": "val",
                    "description": "",
                    "type": "String|Number"
                }
            ],
            "return": {
                "description": "",
                "type": "String|Number"
            },
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1282,
            "description": "Parse the given `str` and return milliseconds.",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1321,
            "description": "Format the given `ms`.",
            "params": [
                {
                    "name": "ms",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1344,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1352,
            "description": "Save timer references to avoid Sinon interfering (see GH-237).",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1362,
            "description": "Check if both stdio streams are associated with a tty.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1368,
            "description": "Expose `Base`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1374,
            "description": "Enable coloring by default.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1380,
            "description": "Default color map.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1406,
            "description": "Default symbol map.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1423,
            "description": "Color `str` with the given `type`,\nallowing colors to be disabled,\nas well as user-defined color\nschemes.",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1440,
            "description": "Expose term window size, with some\ndefaults for when stderr is not a tty.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1453,
            "description": "Expose some basic cursor interactions\nthat are common among reporters.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1481,
            "description": "Outut the given `failures` as a list.",
            "params": [
                {
                    "name": "failures",
                    "description": "",
                    "type": "Array"
                }
            ],
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1553,
            "description": "Initialize a new `Base` reporter.\n\nAll other reporters generally\ninherit from this reporter, providing\nstats such as test duration, number\nof tests passed / failed etc.",
            "params": [
                {
                    "name": "runner",
                    "description": "",
                    "type": "Runner"
                }
            ],
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1619,
            "description": "Output common epilogue used by many of\nthe bundled reporters.",
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1674,
            "description": "Pad the given `str` to `len`.",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "len",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1688,
            "description": "Return a character diff for `err`.",
            "params": [
                {
                    "name": "err",
                    "description": "",
                    "type": "Error"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1710,
            "description": "Color lines for `str`, using the color `name`.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1729,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1736,
            "description": "Expose `Doc`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1742,
            "description": "Initialize a new `Doc` reporter.",
            "params": [
                {
                    "name": "runner",
                    "description": "",
                    "type": "Runner"
                }
            ],
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1789,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1796,
            "description": "Expose `Dot`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1802,
            "description": "Initialize a new `Dot` matrix test reporter.",
            "params": [
                {
                    "name": "runner",
                    "description": "",
                    "type": "Runner"
                }
            ],
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1845,
            "description": "Inherit from `Base.prototype`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1856,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1863,
            "description": "Expose `HTMLCov`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1869,
            "description": "Initialize a new `JsCoverage` reporter.",
            "params": [
                {
                    "name": "runner",
                    "description": "",
                    "type": "Runner"
                }
            ],
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1893,
            "description": "Return coverage class for `n`.",
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1910,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1919,
            "description": "Save timer references to avoid Sinon interfering (see GH-237).",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1929,
            "description": "Expose `Doc`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1935,
            "description": "Stats template.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 1946,
            "description": "Initialize a new `Doc` reporter.",
            "params": [
                {
                    "name": "runner",
                    "description": "",
                    "type": "Runner"
                }
            ],
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2090,
            "description": "Display error `msg`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2098,
            "description": "Return a DOM fragment from `html`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2117,
            "description": "Check for suites that do not have elements\nwith `classname`, and hide them.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2130,
            "description": "Unhide .hidden suites.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2141,
            "description": "Set `el` text to `str`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2153,
            "description": "Listen on `event` with callback `fn`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2192,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2198,
            "description": "Expose `JSONCov`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2204,
            "description": "Initialize a new `JsCoverage` reporter.",
            "params": [
                {
                    "name": "runner",
                    "description": "",
                    "type": "Runner"
                },
                {
                    "name": "output",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2246,
            "description": "Map jscoverage data to a JSON structure\nsuitable for reporting.",
            "params": [
                {
                    "name": "cov",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2284,
            "description": "Map jscoverage data for a single source file\nto a JSON structure suitable for reporting.",
            "params": [
                {
                    "name": "filename",
                    "description": "name of the source file",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "jscoverage coverage data",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2328,
            "description": "Return a plain-object representation of `test`\nfree of cyclic properties etc.",
            "params": [
                {
                    "name": "test",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2349,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2356,
            "description": "Expose `List`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2362,
            "description": "Initialize a new `List` test reporter.",
            "params": [
                {
                    "name": "runner",
                    "description": "",
                    "type": "Runner"
                }
            ],
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2393,
            "description": "Return a plain-object representation of `test`\nfree of cyclic properties etc.",
            "params": [
                {
                    "name": "test",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2413,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2421,
            "description": "Expose `JSON`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2427,
            "description": "Initialize a new `JSON` reporter.",
            "params": [
                {
                    "name": "runner",
                    "description": "",
                    "type": "Runner"
                }
            ],
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2466,
            "description": "Return a plain-object representation of `test`\nfree of cyclic properties etc.",
            "params": [
                {
                    "name": "test",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2486,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2494,
            "description": "Expose `Landing`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2500,
            "description": "Airplane color.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2506,
            "description": "Airplane crash color.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2512,
            "description": "Runway color.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2518,
            "description": "Initialize a new `Landing` reporter.",
            "params": [
                {
                    "name": "runner",
                    "description": "",
                    "type": "Runner"
                }
            ],
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2577,
            "description": "Inherit from `Base.prototype`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2588,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2596,
            "description": "Expose `List`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2602,
            "description": "Initialize a new `List` test reporter.",
            "params": [
                {
                    "name": "runner",
                    "description": "",
                    "type": "Runner"
                }
            ],
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2646,
            "description": "Inherit from `Base.prototype`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2657,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2664,
            "description": "Expose `Markdown`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2670,
            "description": "Initialize a new `Markdown` reporter.",
            "params": [
                {
                    "name": "runner",
                    "description": "",
                    "type": "Runner"
                }
            ],
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2753,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2759,
            "description": "Expose `Min`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2765,
            "description": "Initialize a new `Min` minimal test reporter (best used with --watch).",
            "params": [
                {
                    "name": "runner",
                    "description": "",
                    "type": "Runner"
                }
            ],
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2785,
            "description": "Inherit from `Base.prototype`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2796,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2803,
            "description": "Expose `Dot`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2809,
            "description": "Initialize a new `Dot` matrix test reporter.",
            "params": [
                {
                    "name": "runner",
                    "description": "",
                    "type": "Runner"
                }
            ],
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2856,
            "description": "Draw the nyan cat with runner `status`.",
            "params": [
                {
                    "name": "status",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2871,
            "description": "Draw the \"scoreboard\" showing the number\nof passes, failures and pending tests.",
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2896,
            "description": "Append the rainbow.",
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2913,
            "description": "Draw the rainbow.",
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2931,
            "description": "Draw the nyan cat with `status`.",
            "params": [
                {
                    "name": "status",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2983,
            "description": "Move cursor up `n`.",
            "params": [
                {
                    "name": "n",
                    "description": "",
                    "type": "Number"
                }
            ],
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 2994,
            "description": "Move cursor down `n`.",
            "params": [
                {
                    "name": "n",
                    "description": "",
                    "type": "Number"
                }
            ],
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3005,
            "description": "Generate rainbow colors.",
            "return": {
                "description": "",
                "type": "Array"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3027,
            "description": "Apply rainbow to the given `str`.",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3041,
            "description": "Stdout helper.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3049,
            "description": "Inherit from `Base.prototype`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3061,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3069,
            "description": "Expose `Progress`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3075,
            "description": "General progress bar color.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3081,
            "description": "Initialize a new `Progress` bar test reporter.",
            "params": [
                {
                    "name": "runner",
                    "description": "",
                    "type": "Runner"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3141,
            "description": "Inherit from `Base.prototype`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3153,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3161,
            "description": "Expose `Spec`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3167,
            "description": "Initialize a new `Spec` test reporter.",
            "params": [
                {
                    "name": "runner",
                    "description": "",
                    "type": "Runner"
                }
            ],
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3234,
            "description": "Inherit from `Base.prototype`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3246,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3254,
            "description": "Expose `TAP`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3260,
            "description": "Initialize a new `TAP` reporter.",
            "params": [
                {
                    "name": "runner",
                    "description": "",
                    "type": "Runner"
                }
            ],
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3297,
            "description": "Return a TAP-safe title of `test`",
            "params": [
                {
                    "name": "test",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3313,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3319,
            "description": "Expose `Teamcity`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3325,
            "description": "Initialize a new `Teamcity` reporter.",
            "params": [
                {
                    "name": "runner",
                    "description": "",
                    "type": "Runner"
                }
            ],
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3361,
            "description": "Escape the given `str`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3382,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3390,
            "description": "Save timer references to avoid Sinon interfering (see GH-237).",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3400,
            "description": "Expose `XUnit`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3406,
            "description": "Initialize a new `XUnit` reporter.",
            "params": [
                {
                    "name": "runner",
                    "description": "",
                    "type": "Runner"
                }
            ],
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3443,
            "description": "Inherit from `Base.prototype`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3451,
            "description": "Output tag for the given `test.`",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3473,
            "description": "HTML tag helper.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3491,
            "description": "Return cdata escaped CDATA `str`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3503,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3511,
            "description": "Save timer references to avoid Sinon interfering (see GH-237).",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3521,
            "description": "Expose `Runnable`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3527,
            "description": "Initialize a new `Runnable` with the given `title` and callback `fn`.",
            "params": [
                {
                    "name": "title",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3545,
            "description": "Inherit from `EventEmitter.prototype`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3553,
            "description": "Set & get timeout `ms`.",
            "params": [
                {
                    "name": "ms",
                    "description": "",
                    "type": "Number|String"
                }
            ],
            "return": {
                "description": "ms or self",
                "type": "Runnable|Number"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3570,
            "description": "Set & get slow `ms`.",
            "params": [
                {
                    "name": "ms",
                    "description": "",
                    "type": "Number|String"
                }
            ],
            "return": {
                "description": "ms or self",
                "type": "Runnable|Number"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3586,
            "description": "Return the full title generated by recursively\nconcatenating the parent's full title.",
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3598,
            "description": "Clear the timeout.",
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3608,
            "description": "Inspect the runnable void of private properties.",
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3624,
            "description": "Reset the timeout.",
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3643,
            "description": "Run the test and invoke `fn(err)`.",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3722,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3734,
            "description": "Non-enumerable globals.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3747,
            "description": "Expose `Runner`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3753,
            "description": "Initialize a `Runner` for the given `suite`.\n\nEvents:\n\n  - `start`  execution started\n  - `end`  execution complete\n  - `suite`  (suite) test suite execution started\n  - `suite end`  (suite) all tests (and sub-suites) have finished\n  - `test`  (test) test execution started\n  - `test end`  (test) test completed\n  - `hook`  (hook) hook execution started\n  - `hook end`  (hook) hook complete\n  - `pass`  (test) test passed\n  - `fail`  (test, err) test failed",
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3784,
            "description": "Inherit from `EventEmitter.prototype`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3792,
            "description": "Run tests with full titles matching `re`. Updates runner.total\nwith number of tests matched.",
            "params": [
                {
                    "name": "re",
                    "description": "",
                    "type": "RegExp"
                },
                {
                    "name": "invert",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "for chaining",
                "type": "Runner"
            },
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3810,
            "description": "Returns the number of tests matching the grep search for the\ngiven suite.",
            "params": [
                {
                    "name": "suite",
                    "description": "",
                    "type": "Suite"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3832,
            "description": "Return a list of global properties.",
            "return": {
                "description": "",
                "type": "Array"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3851,
            "description": "Allow the given `arr` of globals.",
            "params": [
                {
                    "name": "arr",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "for chaining",
                "type": "Runner"
            },
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3868,
            "description": "Check for global variable leaks.",
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3895,
            "description": "Fail the given `test`.",
            "params": [
                {
                    "name": "test",
                    "description": "",
                    "type": "Test"
                },
                {
                    "name": "err",
                    "description": "",
                    "type": "Error"
                }
            ],
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3912,
            "description": "Fail the given `hook` with `err`.\n\nHook failures (currently) hard-end due\nto that fact that a failing hook will\nsurely cause subsequent tests to fail,\ncausing jumbled reporting.",
            "params": [
                {
                    "name": "hook",
                    "description": "",
                    "type": "Hook"
                },
                {
                    "name": "err",
                    "description": "",
                    "type": "Error"
                }
            ],
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3930,
            "description": "Run hook `name` callbacks and then invoke `fn()`.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "function",
                    "description": "",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 3970,
            "description": "Run hook `name` for the given array of `suites`\nin order, and callback `fn(err)`.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "suites",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4005,
            "description": "Run hooks from the top level down.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4018,
            "description": "Run hooks from the bottom up.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4031,
            "description": "Return an array of parent Suites from\nclosest to furthest.",
            "return": {
                "description": "",
                "type": "Array"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4046,
            "description": "Run the current test and callback `fn(err)`.",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4069,
            "description": "Run tests in the given `suite` and invoke\nthe callback `fn()` when complete.",
            "params": [
                {
                    "name": "suite",
                    "description": "",
                    "type": "Suite"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4130,
            "description": "Run the given `suite` and invoke the\ncallback `fn()` when complete.",
            "params": [
                {
                    "name": "suite",
                    "description": "",
                    "type": "Suite"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4169,
            "description": "Handle uncaught exceptions.",
            "params": [
                {
                    "name": "err",
                    "description": "",
                    "type": "Error"
                }
            ],
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4195,
            "description": "Run the root suite and invoke `fn(failures)`\non completion.",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "for chaining",
                "type": "Runner"
            },
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4235,
            "description": "Filter leaks with the given globals flagged as `ok`.",
            "params": [
                {
                    "name": "ok",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "globals",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4260,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4270,
            "description": "Expose `Suite`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4276,
            "description": "Create a new `Suite` with the given `title`\nand parent `Suite`. When a suite with the\nsame title is already present, that suite\nis returned to provide nicer reporter\nand more flexible meta-testing.",
            "params": [
                {
                    "name": "parent",
                    "description": "",
                    "type": "Suite"
                },
                {
                    "name": "title",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Suite"
            },
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4298,
            "description": "Initialize a new `Suite` with the given\n`title` and `ctx`.",
            "params": [
                {
                    "name": "title",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "ctx",
                    "description": "",
                    "type": "Context"
                }
            ],
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4323,
            "description": "Inherit from `EventEmitter.prototype`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4331,
            "description": "Return a clone of this `Suite`.",
            "return": {
                "description": "",
                "type": "Suite"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4348,
            "description": "Set timeout `ms` or short-hand such as \"2s\".",
            "params": [
                {
                    "name": "ms",
                    "description": "",
                    "type": "Number|String"
                }
            ],
            "return": {
                "description": "for chaining",
                "type": "Suite|Number"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4364,
            "description": "Set slow `ms` or short-hand such as \"2s\".",
            "params": [
                {
                    "name": "ms",
                    "description": "",
                    "type": "Number|String"
                }
            ],
            "return": {
                "description": "for chaining",
                "type": "Suite|Number"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4380,
            "description": "Sets whether to bail after first error.",
            "params": [
                {
                    "name": "bail",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "for chaining",
                "type": "Suite|Number"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4395,
            "description": "Run `fn(test[, done])` before running tests.",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "for chaining",
                "type": "Suite"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4415,
            "description": "Run `fn(test[, done])` after running tests.",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "for chaining",
                "type": "Suite"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4435,
            "description": "Run `fn(test[, done])` before each test case.",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "for chaining",
                "type": "Suite"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4455,
            "description": "Run `fn(test[, done])` after each test case.",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "for chaining",
                "type": "Suite"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4475,
            "description": "Add a test `suite`.",
            "params": [
                {
                    "name": "suite",
                    "description": "",
                    "type": "Suite"
                }
            ],
            "return": {
                "description": "for chaining",
                "type": "Suite"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4493,
            "description": "Add a `test` to this suite.",
            "params": [
                {
                    "name": "test",
                    "description": "",
                    "type": "Test"
                }
            ],
            "return": {
                "description": "for chaining",
                "type": "Suite"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4511,
            "description": "Return the full title generated by recursively\nconcatenating the parent's full title.",
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4527,
            "description": "Return the total number of tests.",
            "return": {
                "description": "",
                "type": "Number"
            },
            "api": "public",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4540,
            "description": "Iterates through each suite recursively to find\nall tests. Applies a function in the format\n`fn(test)`.",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Suite"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4562,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4568,
            "description": "Expose `Test`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4574,
            "description": "Initialize a new `Test` with the given `title` and callback `fn`.",
            "params": [
                {
                    "name": "title",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4588,
            "description": "Inherit from `Runnable.prototype`.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4600,
            "description": "Module dependencies.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4609,
            "description": "Ignored directories.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4615,
            "description": "Escape special characters in the given string of html.",
            "params": [
                {
                    "name": "html",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4631,
            "description": "Array#forEach (<=IE8)",
            "params": [
                {
                    "name": "array",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4645,
            "description": "Array#indexOf (<=IE8)",
            "params": [
                {
                    "name": "arr",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "obj",
                    "description": "to find index of",
                    "type": "Object"
                },
                {
                    "name": "start",
                    "description": "",
                    "type": "Number"
                }
            ],
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4662,
            "description": "Array#reduce (<=IE8)",
            "params": [
                {
                    "name": "array",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "initial",
                    "description": "value",
                    "type": "Object"
                }
            ],
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4681,
            "description": "Array#filter (<=IE8)",
            "params": [
                {
                    "name": "array",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4700,
            "description": "Object.keys (<=IE8)",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "keys",
                "type": "Array"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4721,
            "description": "Watch the given `files` for changes\nand invoke `fn(file)` on modification.",
            "params": [
                {
                    "name": "files",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4740,
            "description": "Ignored files.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4748,
            "description": "Lookup files in the given `dir`.",
            "return": {
                "description": "",
                "type": "Array"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4772,
            "description": "Compute a slug from the given `str`.",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4787,
            "description": "Strip the function definition from `str`,\nand re-indent for pre whitespace.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4805,
            "description": "Escape regular expression characters in `str`.",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4817,
            "description": "Trim the given `str`.",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4829,
            "description": "Parse the given `qs`.",
            "params": [
                {
                    "name": "qs",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4848,
            "description": "Highlight the given string of `js`.",
            "params": [
                {
                    "name": "js",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4868,
            "description": "Highlight the contents of tag `name`.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "private",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4883,
            "description": "Node shims.\n\nThese are meant only to allow\nmocha.js to run untouched, not\nto allow running node code in\nthe browser.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4897,
            "description": "next tick implementation.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4925,
            "description": "Remove uncaughtException listener.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4935,
            "description": "Implements uncaughtException listener.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4948,
            "description": "Expose mocha.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4955,
            "description": "Override ui to ensure that the ui functions are initialized.\nNormally this would happen in Mocha.prototype.loadFiles.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4966,
            "description": "Setup mocha with the given setting options.",
            "class": "",
            "namespace": "base"
        },
        {
            "file": "test/js/mocha.js",
            "line": 4976,
            "description": "Run mocha, returning the Runner.",
            "class": "",
            "namespace": "base"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/almond.js:20"
        },
        {
            "message": "param name missing: {Array}",
            "line": " src/base/Command.js:8"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:80"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:88"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:112"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:132"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:169"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:188"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:210"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:272"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:285"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:298"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:401"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:409"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:423"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:436"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:449"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:480"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:501"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:987"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:999"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1028"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1040"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1062"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1077"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1096"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1120"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1135"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1147"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1159"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1171"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1183"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1196"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1209"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1222"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1234"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1269"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1282"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1321"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1423"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1481"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1553"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1619"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1674"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1688"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1710"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1742"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1802"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1869"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1893"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:1946"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:2204"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:2246"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:2284"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:2328"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:2362"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:2393"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:2427"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:2466"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:2518"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:2602"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:2670"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:2765"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:2809"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:2856"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:2871"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:2896"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:2913"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:2931"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:2983"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:2994"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:3005"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:3027"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:3081"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:3167"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:3260"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:3297"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:3325"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:3406"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:3527"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:3553"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:3570"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:3586"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:3598"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:3608"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:3624"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:3643"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:3753"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:3792"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:3810"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:3832"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:3851"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:3868"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:3895"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:3912"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:3930"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:3970"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4005"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4018"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4031"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4046"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4069"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4130"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4169"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4195"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4235"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4276"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4298"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4331"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4348"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4364"
        },
        {
            "message": "replacing incorrect tag: parma with param",
            "line": " test/js/mocha.js:4380"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4380"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4395"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4415"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4435"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4455"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4475"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4493"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4511"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4527"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4540"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4574"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4615"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4631"
        },
        {
            "message": "replacing incorrect tag: parma with param",
            "line": " test/js/mocha.js:4645"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4645"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4662"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4681"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4700"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4721"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4748"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4772"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4805"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4817"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4829"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4848"
        },
        {
            "message": "unknown tag: api",
            "line": " test/js/mocha.js:4868"
        },
        {
            "message": "Missing item type\nalmond 0.2.0 Copyright (c) 2011, The Dojo Foundation All Rights Reserved.\nAvailable via the MIT or new BSD license.\nsee: http://github.com/jrburke/almond for details",
            "line": " dist/build.js:1"
        },
        {
            "message": "Missing item type\nalmond 0.2.0 Copyright (c) 2011, The Dojo Foundation All Rights Reserved.\nAvailable via the MIT or new BSD license.\nsee: http://github.com/jrburke/almond for details",
            "line": " lib/almond.js:1"
        },
        {
            "message": "Missing item type\nGiven a relative module name, like ./something, normalize it to\na real name that can be mapped to a path.",
            "line": " lib/almond.js:20"
        },
        {
            "message": "Missing item type\nMakes a name map, normalizing the name, and using a plugin\nfor normalization if necessary. Grabs a ref to plugin\ntoo, as an optimization.",
            "line": " lib/almond.js:179"
        },
        {
            "message": "Missing item type\nJust drops the config on the floor, but returns req in case\nthe config return value is used.",
            "line": " lib/almond.js:359"
        },
        {
            "message": "Missing item type\nModule exports.",
            "line": " test/js/mocha.js:66"
        },
        {
            "message": "Missing item type\nCheck if `obj` is an array.",
            "line": " test/js/mocha.js:72"
        },
        {
            "message": "Missing item type\nEvent emitter constructor.",
            "line": " test/js/mocha.js:80"
        },
        {
            "message": "Missing item type\nAdds a listener.",
            "line": " test/js/mocha.js:88"
        },
        {
            "message": "Missing item type\nAdds a volatile listener.",
            "line": " test/js/mocha.js:112"
        },
        {
            "message": "Missing item type\nRemoves a listener.",
            "line": " test/js/mocha.js:132"
        },
        {
            "message": "Missing item type\nRemoves all listeners for an event.",
            "line": " test/js/mocha.js:169"
        },
        {
            "message": "Missing item type\nGets all listeners for a certain event.",
            "line": " test/js/mocha.js:188"
        },
        {
            "message": "Missing item type\nEmits an event.",
            "line": " test/js/mocha.js:210"
        },
        {
            "message": "Missing item type\nExpose `Progress`.",
            "line": " test/js/mocha.js:255"
        },
        {
            "message": "Missing item type\nInitialize a new `Progress` indicator.",
            "line": " test/js/mocha.js:261"
        },
        {
            "message": "Missing item type\nSet progress size to `n`.",
            "line": " test/js/mocha.js:272"
        },
        {
            "message": "Missing item type\nSet text to `str`.",
            "line": " test/js/mocha.js:285"
        },
        {
            "message": "Missing item type\nSet font size to `n`.",
            "line": " test/js/mocha.js:298"
        },
        {
            "message": "Missing item type\nSet font `family`.",
            "line": " test/js/mocha.js:311"
        },
        {
            "message": "Missing item type\nUpdate percentage to `n`.",
            "line": " test/js/mocha.js:323"
        },
        {
            "message": "Missing item type\nDraw on `ctx`.",
            "line": " test/js/mocha.js:335"
        },
        {
            "message": "Missing item type\nExpose `Context`.",
            "line": " test/js/mocha.js:395"
        },
        {
            "message": "Missing item type\nInitialize a new `Context`.",
            "line": " test/js/mocha.js:401"
        },
        {
            "message": "Missing item type\nSet or get the context `Runnable` to `runnable`.",
            "line": " test/js/mocha.js:409"
        },
        {
            "message": "Missing item type\nSet test timeout `ms`.",
            "line": " test/js/mocha.js:423"
        },
        {
            "message": "Missing item type\nSet test slowness threshold `ms`.",
            "line": " test/js/mocha.js:436"
        },
        {
            "message": "Missing item type\nInspect the context void of `._runnable`.",
            "line": " test/js/mocha.js:449"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:468"
        },
        {
            "message": "Missing item type\nExpose `Hook`.",
            "line": " test/js/mocha.js:474"
        },
        {
            "message": "Missing item type\nInitialize a new `Hook` with the given `title` and callback `fn`.",
            "line": " test/js/mocha.js:480"
        },
        {
            "message": "Missing item type\nInherit from `Runnable.prototype`.",
            "line": " test/js/mocha.js:493"
        },
        {
            "message": "Missing item type\nGet or set the test `err`.",
            "line": " test/js/mocha.js:501"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:524"
        },
        {
            "message": "Missing item type\nBDD-style interface:\n\n     describe('Array', function(){\n       describe('#indexOf()', function(){\n         it('should return -1 when not present', function(){\n\n         });\n\n         it('should return the index when present', function(){\n\n         });\n       });\n     });",
            "line": " test/js/mocha.js:531"
        },
        {
            "message": "Missing item type\nExecute before running tests.",
            "line": " test/js/mocha.js:553"
        },
        {
            "message": "Missing item type\nExecute after running tests.",
            "line": " test/js/mocha.js:561"
        },
        {
            "message": "Missing item type\nExecute before each test case.",
            "line": " test/js/mocha.js:569"
        },
        {
            "message": "Missing item type\nExecute after each test case.",
            "line": " test/js/mocha.js:577"
        },
        {
            "message": "Missing item type\nDescribe a \"suite\" with the given `title`\nand callback `fn` containing nested suites\nand/or tests.",
            "line": " test/js/mocha.js:585"
        },
        {
            "message": "Missing item type\nPending describe.",
            "line": " test/js/mocha.js:599"
        },
        {
            "message": "Missing item type\nExclusive suite.",
            "line": " test/js/mocha.js:613"
        },
        {
            "message": "Missing item type\nDescribe a specification or test-case\nwith the given `title` and callback `fn`\nacting as a thunk.",
            "line": " test/js/mocha.js:622"
        },
        {
            "message": "Missing item type\nExclusive test-case.",
            "line": " test/js/mocha.js:636"
        },
        {
            "message": "Missing item type\nPending test case.",
            "line": " test/js/mocha.js:645"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:661"
        },
        {
            "message": "Missing item type\nTDD-style interface:\n\n    exports.Array = {\n      '#indexOf()': {\n        'should return -1 when the value is not present': function(){\n          \n        },\n\n        'should return the correct index when the value is present': function(){\n          \n        }\n      }\n    };",
            "line": " test/js/mocha.js:668"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:733"
        },
        {
            "message": "Missing item type\nQUnit-style interface:\n\n    suite('Array');\n    \n    test('#length', function(){\n      var arr = [1,2,3];\n      ok(arr.length == 3);\n    });\n    \n    test('#indexOf()', function(){\n      var arr = [1,2,3];\n      ok(arr.indexOf(1) == 0);\n      ok(arr.indexOf(2) == 1);\n      ok(arr.indexOf(3) == 2);\n    });\n    \n    suite('String');\n    \n    test('#length', function(){\n      ok('foo'.length == 3);\n    });",
            "line": " test/js/mocha.js:740"
        },
        {
            "message": "Missing item type\nExecute before running tests.",
            "line": " test/js/mocha.js:770"
        },
        {
            "message": "Missing item type\nExecute after running tests.",
            "line": " test/js/mocha.js:778"
        },
        {
            "message": "Missing item type\nExecute before each test case.",
            "line": " test/js/mocha.js:786"
        },
        {
            "message": "Missing item type\nExecute after each test case.",
            "line": " test/js/mocha.js:794"
        },
        {
            "message": "Missing item type\nDescribe a \"suite\" with the given `title`.",
            "line": " test/js/mocha.js:802"
        },
        {
            "message": "Missing item type\nDescribe a specification or test-case\nwith the given `title` and callback `fn`\nacting as a thunk.",
            "line": " test/js/mocha.js:812"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:828"
        },
        {
            "message": "Missing item type\nTDD-style interface:\n\n     suite('Array', function(){\n       suite('#indexOf()', function(){\n         suiteSetup(function(){\n\n         });\n         \n         test('should return -1 when not present', function(){\n\n         });\n\n         test('should return the index when present', function(){\n\n         });\n\n         suiteTeardown(function(){\n\n         });\n       });\n     });",
            "line": " test/js/mocha.js:835"
        },
        {
            "message": "Missing item type\nExecute before each test case.",
            "line": " test/js/mocha.js:865"
        },
        {
            "message": "Missing item type\nExecute after each test case.",
            "line": " test/js/mocha.js:873"
        },
        {
            "message": "Missing item type\nExecute before the suite.",
            "line": " test/js/mocha.js:881"
        },
        {
            "message": "Missing item type\nExecute after the suite.",
            "line": " test/js/mocha.js:889"
        },
        {
            "message": "Missing item type\nDescribe a \"suite\" with the given `title`\nand callback `fn` containing nested suites\nand/or tests.",
            "line": " test/js/mocha.js:897"
        },
        {
            "message": "Missing item type\nExclusive test-case.",
            "line": " test/js/mocha.js:911"
        },
        {
            "message": "Missing item type\nDescribe a specification or test-case\nwith the given `title` and callback `fn`\nacting as a thunk.",
            "line": " test/js/mocha.js:920"
        },
        {
            "message": "Missing item type\nExclusive test-case.",
            "line": " test/js/mocha.js:932"
        },
        {
            "message": "Missing item type\nPending test case.",
            "line": " test/js/mocha.js:941"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:960"
        },
        {
            "message": "Missing item type\nExpose `Mocha`.",
            "line": " test/js/mocha.js:967"
        },
        {
            "message": "Missing item type\nExpose internals.",
            "line": " test/js/mocha.js:973"
        },
        {
            "message": "Missing item type\nReturn image `name` path.",
            "line": " test/js/mocha.js:987"
        },
        {
            "message": "Missing item type\nSetup mocha with `options`.\n\nOptions:\n\n  - `ui` name \"bdd\", \"tdd\", \"exports\" etc\n  - `reporter` reporter instance, defaults to `mocha.reporters.Dot`\n  - `globals` array of accepted globals\n  - `timeout` timeout in milliseconds\n  - `slow` milliseconds to wait before considering a test slow\n  - `ignoreLeaks` ignore global leaks\n  - `grep` string or regexp to filter tests with",
            "line": " test/js/mocha.js:999"
        },
        {
            "message": "Missing item type\nAdd test `file`.",
            "line": " test/js/mocha.js:1028"
        },
        {
            "message": "Missing item type\nSet reporter to `reporter`, defaults to \"dot\".",
            "line": " test/js/mocha.js:1040"
        },
        {
            "message": "Missing item type\nSet test UI `name`, defaults to \"bdd\".",
            "line": " test/js/mocha.js:1062"
        },
        {
            "message": "Missing item type\nLoad registered files.",
            "line": " test/js/mocha.js:1077"
        },
        {
            "message": "Missing item type\nEnable growl support.",
            "line": " test/js/mocha.js:1096"
        },
        {
            "message": "Missing item type\nAdd regexp to grep, if `re` is a string it is escaped.",
            "line": " test/js/mocha.js:1120"
        },
        {
            "message": "Missing item type\nInvert `.grep()` matches.",
            "line": " test/js/mocha.js:1135"
        },
        {
            "message": "Missing item type\nIgnore global leaks.",
            "line": " test/js/mocha.js:1147"
        },
        {
            "message": "Missing item type\nEnable global leak checking.",
            "line": " test/js/mocha.js:1159"
        },
        {
            "message": "Missing item type\nEnable growl support.",
            "line": " test/js/mocha.js:1171"
        },
        {
            "message": "Missing item type\nIgnore `globals` array or string.",
            "line": " test/js/mocha.js:1183"
        },
        {
            "message": "Missing item type\nSet the timeout in milliseconds.",
            "line": " test/js/mocha.js:1196"
        },
        {
            "message": "Missing item type\nSet slowness threshold in milliseconds.",
            "line": " test/js/mocha.js:1209"
        },
        {
            "message": "Missing item type\nMakes all tests async (accepting a callback)",
            "line": " test/js/mocha.js:1222"
        },
        {
            "message": "Missing item type\nRun tests and invoke `fn()` when complete.",
            "line": " test/js/mocha.js:1234"
        },
        {
            "message": "Missing item type\nHelpers.",
            "line": " test/js/mocha.js:1260"
        },
        {
            "message": "Missing item type\nParse or format the given `val`.",
            "line": " test/js/mocha.js:1269"
        },
        {
            "message": "Missing item type\nParse the given `str` and return milliseconds.",
            "line": " test/js/mocha.js:1282"
        },
        {
            "message": "Missing item type\nFormat the given `ms`.",
            "line": " test/js/mocha.js:1321"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:1344"
        },
        {
            "message": "Missing item type\nSave timer references to avoid Sinon interfering (see GH-237).",
            "line": " test/js/mocha.js:1352"
        },
        {
            "message": "Missing item type\nCheck if both stdio streams are associated with a tty.",
            "line": " test/js/mocha.js:1362"
        },
        {
            "message": "Missing item type\nExpose `Base`.",
            "line": " test/js/mocha.js:1368"
        },
        {
            "message": "Missing item type\nEnable coloring by default.",
            "line": " test/js/mocha.js:1374"
        },
        {
            "message": "Missing item type\nDefault color map.",
            "line": " test/js/mocha.js:1380"
        },
        {
            "message": "Missing item type\nDefault symbol map.",
            "line": " test/js/mocha.js:1406"
        },
        {
            "message": "Missing item type\nColor `str` with the given `type`,\nallowing colors to be disabled,\nas well as user-defined color\nschemes.",
            "line": " test/js/mocha.js:1423"
        },
        {
            "message": "Missing item type\nExpose term window size, with some\ndefaults for when stderr is not a tty.",
            "line": " test/js/mocha.js:1440"
        },
        {
            "message": "Missing item type\nExpose some basic cursor interactions\nthat are common among reporters.",
            "line": " test/js/mocha.js:1453"
        },
        {
            "message": "Missing item type\nOutut the given `failures` as a list.",
            "line": " test/js/mocha.js:1481"
        },
        {
            "message": "Missing item type\nInitialize a new `Base` reporter.\n\nAll other reporters generally\ninherit from this reporter, providing\nstats such as test duration, number\nof tests passed / failed etc.",
            "line": " test/js/mocha.js:1553"
        },
        {
            "message": "Missing item type\nOutput common epilogue used by many of\nthe bundled reporters.",
            "line": " test/js/mocha.js:1619"
        },
        {
            "message": "Missing item type\nPad the given `str` to `len`.",
            "line": " test/js/mocha.js:1674"
        },
        {
            "message": "Missing item type\nReturn a character diff for `err`.",
            "line": " test/js/mocha.js:1688"
        },
        {
            "message": "Missing item type\nColor lines for `str`, using the color `name`.",
            "line": " test/js/mocha.js:1710"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:1729"
        },
        {
            "message": "Missing item type\nExpose `Doc`.",
            "line": " test/js/mocha.js:1736"
        },
        {
            "message": "Missing item type\nInitialize a new `Doc` reporter.",
            "line": " test/js/mocha.js:1742"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:1789"
        },
        {
            "message": "Missing item type\nExpose `Dot`.",
            "line": " test/js/mocha.js:1796"
        },
        {
            "message": "Missing item type\nInitialize a new `Dot` matrix test reporter.",
            "line": " test/js/mocha.js:1802"
        },
        {
            "message": "Missing item type\nInherit from `Base.prototype`.",
            "line": " test/js/mocha.js:1845"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:1856"
        },
        {
            "message": "Missing item type\nExpose `HTMLCov`.",
            "line": " test/js/mocha.js:1863"
        },
        {
            "message": "Missing item type\nInitialize a new `JsCoverage` reporter.",
            "line": " test/js/mocha.js:1869"
        },
        {
            "message": "Missing item type\nReturn coverage class for `n`.",
            "line": " test/js/mocha.js:1893"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:1910"
        },
        {
            "message": "Missing item type\nSave timer references to avoid Sinon interfering (see GH-237).",
            "line": " test/js/mocha.js:1919"
        },
        {
            "message": "Missing item type\nExpose `Doc`.",
            "line": " test/js/mocha.js:1929"
        },
        {
            "message": "Missing item type\nStats template.",
            "line": " test/js/mocha.js:1935"
        },
        {
            "message": "Missing item type\nInitialize a new `Doc` reporter.",
            "line": " test/js/mocha.js:1946"
        },
        {
            "message": "Missing item type\nDisplay error `msg`.",
            "line": " test/js/mocha.js:2090"
        },
        {
            "message": "Missing item type\nReturn a DOM fragment from `html`.",
            "line": " test/js/mocha.js:2098"
        },
        {
            "message": "Missing item type\nCheck for suites that do not have elements\nwith `classname`, and hide them.",
            "line": " test/js/mocha.js:2117"
        },
        {
            "message": "Missing item type\nUnhide .hidden suites.",
            "line": " test/js/mocha.js:2130"
        },
        {
            "message": "Missing item type\nSet `el` text to `str`.",
            "line": " test/js/mocha.js:2141"
        },
        {
            "message": "Missing item type\nListen on `event` with callback `fn`.",
            "line": " test/js/mocha.js:2153"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:2192"
        },
        {
            "message": "Missing item type\nExpose `JSONCov`.",
            "line": " test/js/mocha.js:2198"
        },
        {
            "message": "Missing item type\nInitialize a new `JsCoverage` reporter.",
            "line": " test/js/mocha.js:2204"
        },
        {
            "message": "Missing item type\nMap jscoverage data to a JSON structure\nsuitable for reporting.",
            "line": " test/js/mocha.js:2246"
        },
        {
            "message": "Missing item type\nMap jscoverage data for a single source file\nto a JSON structure suitable for reporting.",
            "line": " test/js/mocha.js:2284"
        },
        {
            "message": "Missing item type\nReturn a plain-object representation of `test`\nfree of cyclic properties etc.",
            "line": " test/js/mocha.js:2328"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:2349"
        },
        {
            "message": "Missing item type\nExpose `List`.",
            "line": " test/js/mocha.js:2356"
        },
        {
            "message": "Missing item type\nInitialize a new `List` test reporter.",
            "line": " test/js/mocha.js:2362"
        },
        {
            "message": "Missing item type\nReturn a plain-object representation of `test`\nfree of cyclic properties etc.",
            "line": " test/js/mocha.js:2393"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:2413"
        },
        {
            "message": "Missing item type\nExpose `JSON`.",
            "line": " test/js/mocha.js:2421"
        },
        {
            "message": "Missing item type\nInitialize a new `JSON` reporter.",
            "line": " test/js/mocha.js:2427"
        },
        {
            "message": "Missing item type\nReturn a plain-object representation of `test`\nfree of cyclic properties etc.",
            "line": " test/js/mocha.js:2466"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:2486"
        },
        {
            "message": "Missing item type\nExpose `Landing`.",
            "line": " test/js/mocha.js:2494"
        },
        {
            "message": "Missing item type\nAirplane color.",
            "line": " test/js/mocha.js:2500"
        },
        {
            "message": "Missing item type\nAirplane crash color.",
            "line": " test/js/mocha.js:2506"
        },
        {
            "message": "Missing item type\nRunway color.",
            "line": " test/js/mocha.js:2512"
        },
        {
            "message": "Missing item type\nInitialize a new `Landing` reporter.",
            "line": " test/js/mocha.js:2518"
        },
        {
            "message": "Missing item type\nInherit from `Base.prototype`.",
            "line": " test/js/mocha.js:2577"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:2588"
        },
        {
            "message": "Missing item type\nExpose `List`.",
            "line": " test/js/mocha.js:2596"
        },
        {
            "message": "Missing item type\nInitialize a new `List` test reporter.",
            "line": " test/js/mocha.js:2602"
        },
        {
            "message": "Missing item type\nInherit from `Base.prototype`.",
            "line": " test/js/mocha.js:2646"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:2657"
        },
        {
            "message": "Missing item type\nExpose `Markdown`.",
            "line": " test/js/mocha.js:2664"
        },
        {
            "message": "Missing item type\nInitialize a new `Markdown` reporter.",
            "line": " test/js/mocha.js:2670"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:2753"
        },
        {
            "message": "Missing item type\nExpose `Min`.",
            "line": " test/js/mocha.js:2759"
        },
        {
            "message": "Missing item type\nInitialize a new `Min` minimal test reporter (best used with --watch).",
            "line": " test/js/mocha.js:2765"
        },
        {
            "message": "Missing item type\nInherit from `Base.prototype`.",
            "line": " test/js/mocha.js:2785"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:2796"
        },
        {
            "message": "Missing item type\nExpose `Dot`.",
            "line": " test/js/mocha.js:2803"
        },
        {
            "message": "Missing item type\nInitialize a new `Dot` matrix test reporter.",
            "line": " test/js/mocha.js:2809"
        },
        {
            "message": "Missing item type\nDraw the nyan cat with runner `status`.",
            "line": " test/js/mocha.js:2856"
        },
        {
            "message": "Missing item type\nDraw the \"scoreboard\" showing the number\nof passes, failures and pending tests.",
            "line": " test/js/mocha.js:2871"
        },
        {
            "message": "Missing item type\nAppend the rainbow.",
            "line": " test/js/mocha.js:2896"
        },
        {
            "message": "Missing item type\nDraw the rainbow.",
            "line": " test/js/mocha.js:2913"
        },
        {
            "message": "Missing item type\nDraw the nyan cat with `status`.",
            "line": " test/js/mocha.js:2931"
        },
        {
            "message": "Missing item type\nMove cursor up `n`.",
            "line": " test/js/mocha.js:2983"
        },
        {
            "message": "Missing item type\nMove cursor down `n`.",
            "line": " test/js/mocha.js:2994"
        },
        {
            "message": "Missing item type\nGenerate rainbow colors.",
            "line": " test/js/mocha.js:3005"
        },
        {
            "message": "Missing item type\nApply rainbow to the given `str`.",
            "line": " test/js/mocha.js:3027"
        },
        {
            "message": "Missing item type\nStdout helper.",
            "line": " test/js/mocha.js:3041"
        },
        {
            "message": "Missing item type\nInherit from `Base.prototype`.",
            "line": " test/js/mocha.js:3049"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:3061"
        },
        {
            "message": "Missing item type\nExpose `Progress`.",
            "line": " test/js/mocha.js:3069"
        },
        {
            "message": "Missing item type\nGeneral progress bar color.",
            "line": " test/js/mocha.js:3075"
        },
        {
            "message": "Missing item type\nInitialize a new `Progress` bar test reporter.",
            "line": " test/js/mocha.js:3081"
        },
        {
            "message": "Missing item type\nInherit from `Base.prototype`.",
            "line": " test/js/mocha.js:3141"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:3153"
        },
        {
            "message": "Missing item type\nExpose `Spec`.",
            "line": " test/js/mocha.js:3161"
        },
        {
            "message": "Missing item type\nInitialize a new `Spec` test reporter.",
            "line": " test/js/mocha.js:3167"
        },
        {
            "message": "Missing item type\nInherit from `Base.prototype`.",
            "line": " test/js/mocha.js:3234"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:3246"
        },
        {
            "message": "Missing item type\nExpose `TAP`.",
            "line": " test/js/mocha.js:3254"
        },
        {
            "message": "Missing item type\nInitialize a new `TAP` reporter.",
            "line": " test/js/mocha.js:3260"
        },
        {
            "message": "Missing item type\nReturn a TAP-safe title of `test`",
            "line": " test/js/mocha.js:3297"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:3313"
        },
        {
            "message": "Missing item type\nExpose `Teamcity`.",
            "line": " test/js/mocha.js:3319"
        },
        {
            "message": "Missing item type\nInitialize a new `Teamcity` reporter.",
            "line": " test/js/mocha.js:3325"
        },
        {
            "message": "Missing item type\nEscape the given `str`.",
            "line": " test/js/mocha.js:3361"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:3382"
        },
        {
            "message": "Missing item type\nSave timer references to avoid Sinon interfering (see GH-237).",
            "line": " test/js/mocha.js:3390"
        },
        {
            "message": "Missing item type\nExpose `XUnit`.",
            "line": " test/js/mocha.js:3400"
        },
        {
            "message": "Missing item type\nInitialize a new `XUnit` reporter.",
            "line": " test/js/mocha.js:3406"
        },
        {
            "message": "Missing item type\nInherit from `Base.prototype`.",
            "line": " test/js/mocha.js:3443"
        },
        {
            "message": "Missing item type\nOutput tag for the given `test.`",
            "line": " test/js/mocha.js:3451"
        },
        {
            "message": "Missing item type\nHTML tag helper.",
            "line": " test/js/mocha.js:3473"
        },
        {
            "message": "Missing item type\nReturn cdata escaped CDATA `str`.",
            "line": " test/js/mocha.js:3491"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:3503"
        },
        {
            "message": "Missing item type\nSave timer references to avoid Sinon interfering (see GH-237).",
            "line": " test/js/mocha.js:3511"
        },
        {
            "message": "Missing item type\nExpose `Runnable`.",
            "line": " test/js/mocha.js:3521"
        },
        {
            "message": "Missing item type\nInitialize a new `Runnable` with the given `title` and callback `fn`.",
            "line": " test/js/mocha.js:3527"
        },
        {
            "message": "Missing item type\nInherit from `EventEmitter.prototype`.",
            "line": " test/js/mocha.js:3545"
        },
        {
            "message": "Missing item type\nSet & get timeout `ms`.",
            "line": " test/js/mocha.js:3553"
        },
        {
            "message": "Missing item type\nSet & get slow `ms`.",
            "line": " test/js/mocha.js:3570"
        },
        {
            "message": "Missing item type\nReturn the full title generated by recursively\nconcatenating the parent's full title.",
            "line": " test/js/mocha.js:3586"
        },
        {
            "message": "Missing item type\nClear the timeout.",
            "line": " test/js/mocha.js:3598"
        },
        {
            "message": "Missing item type\nInspect the runnable void of private properties.",
            "line": " test/js/mocha.js:3608"
        },
        {
            "message": "Missing item type\nReset the timeout.",
            "line": " test/js/mocha.js:3624"
        },
        {
            "message": "Missing item type\nRun the test and invoke `fn(err)`.",
            "line": " test/js/mocha.js:3643"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:3722"
        },
        {
            "message": "Missing item type\nNon-enumerable globals.",
            "line": " test/js/mocha.js:3734"
        },
        {
            "message": "Missing item type\nExpose `Runner`.",
            "line": " test/js/mocha.js:3747"
        },
        {
            "message": "Missing item type\nInitialize a `Runner` for the given `suite`.\n\nEvents:\n\n  - `start`  execution started\n  - `end`  execution complete\n  - `suite`  (suite) test suite execution started\n  - `suite end`  (suite) all tests (and sub-suites) have finished\n  - `test`  (test) test execution started\n  - `test end`  (test) test completed\n  - `hook`  (hook) hook execution started\n  - `hook end`  (hook) hook complete\n  - `pass`  (test) test passed\n  - `fail`  (test, err) test failed",
            "line": " test/js/mocha.js:3753"
        },
        {
            "message": "Missing item type\nInherit from `EventEmitter.prototype`.",
            "line": " test/js/mocha.js:3784"
        },
        {
            "message": "Missing item type\nRun tests with full titles matching `re`. Updates runner.total\nwith number of tests matched.",
            "line": " test/js/mocha.js:3792"
        },
        {
            "message": "Missing item type\nReturns the number of tests matching the grep search for the\ngiven suite.",
            "line": " test/js/mocha.js:3810"
        },
        {
            "message": "Missing item type\nReturn a list of global properties.",
            "line": " test/js/mocha.js:3832"
        },
        {
            "message": "Missing item type\nAllow the given `arr` of globals.",
            "line": " test/js/mocha.js:3851"
        },
        {
            "message": "Missing item type\nCheck for global variable leaks.",
            "line": " test/js/mocha.js:3868"
        },
        {
            "message": "Missing item type\nFail the given `test`.",
            "line": " test/js/mocha.js:3895"
        },
        {
            "message": "Missing item type\nFail the given `hook` with `err`.\n\nHook failures (currently) hard-end due\nto that fact that a failing hook will\nsurely cause subsequent tests to fail,\ncausing jumbled reporting.",
            "line": " test/js/mocha.js:3912"
        },
        {
            "message": "Missing item type\nRun hook `name` callbacks and then invoke `fn()`.",
            "line": " test/js/mocha.js:3930"
        },
        {
            "message": "Missing item type\nRun hook `name` for the given array of `suites`\nin order, and callback `fn(err)`.",
            "line": " test/js/mocha.js:3970"
        },
        {
            "message": "Missing item type\nRun hooks from the top level down.",
            "line": " test/js/mocha.js:4005"
        },
        {
            "message": "Missing item type\nRun hooks from the bottom up.",
            "line": " test/js/mocha.js:4018"
        },
        {
            "message": "Missing item type\nReturn an array of parent Suites from\nclosest to furthest.",
            "line": " test/js/mocha.js:4031"
        },
        {
            "message": "Missing item type\nRun the current test and callback `fn(err)`.",
            "line": " test/js/mocha.js:4046"
        },
        {
            "message": "Missing item type\nRun tests in the given `suite` and invoke\nthe callback `fn()` when complete.",
            "line": " test/js/mocha.js:4069"
        },
        {
            "message": "Missing item type\nRun the given `suite` and invoke the\ncallback `fn()` when complete.",
            "line": " test/js/mocha.js:4130"
        },
        {
            "message": "Missing item type\nHandle uncaught exceptions.",
            "line": " test/js/mocha.js:4169"
        },
        {
            "message": "Missing item type\nRun the root suite and invoke `fn(failures)`\non completion.",
            "line": " test/js/mocha.js:4195"
        },
        {
            "message": "Missing item type\nFilter leaks with the given globals flagged as `ok`.",
            "line": " test/js/mocha.js:4235"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:4260"
        },
        {
            "message": "Missing item type\nExpose `Suite`.",
            "line": " test/js/mocha.js:4270"
        },
        {
            "message": "Missing item type\nCreate a new `Suite` with the given `title`\nand parent `Suite`. When a suite with the\nsame title is already present, that suite\nis returned to provide nicer reporter\nand more flexible meta-testing.",
            "line": " test/js/mocha.js:4276"
        },
        {
            "message": "Missing item type\nInitialize a new `Suite` with the given\n`title` and `ctx`.",
            "line": " test/js/mocha.js:4298"
        },
        {
            "message": "Missing item type\nInherit from `EventEmitter.prototype`.",
            "line": " test/js/mocha.js:4323"
        },
        {
            "message": "Missing item type\nReturn a clone of this `Suite`.",
            "line": " test/js/mocha.js:4331"
        },
        {
            "message": "Missing item type\nSet timeout `ms` or short-hand such as \"2s\".",
            "line": " test/js/mocha.js:4348"
        },
        {
            "message": "Missing item type\nSet slow `ms` or short-hand such as \"2s\".",
            "line": " test/js/mocha.js:4364"
        },
        {
            "message": "Missing item type\nSets whether to bail after first error.",
            "line": " test/js/mocha.js:4380"
        },
        {
            "message": "Missing item type\nRun `fn(test[, done])` before running tests.",
            "line": " test/js/mocha.js:4395"
        },
        {
            "message": "Missing item type\nRun `fn(test[, done])` after running tests.",
            "line": " test/js/mocha.js:4415"
        },
        {
            "message": "Missing item type\nRun `fn(test[, done])` before each test case.",
            "line": " test/js/mocha.js:4435"
        },
        {
            "message": "Missing item type\nRun `fn(test[, done])` after each test case.",
            "line": " test/js/mocha.js:4455"
        },
        {
            "message": "Missing item type\nAdd a test `suite`.",
            "line": " test/js/mocha.js:4475"
        },
        {
            "message": "Missing item type\nAdd a `test` to this suite.",
            "line": " test/js/mocha.js:4493"
        },
        {
            "message": "Missing item type\nReturn the full title generated by recursively\nconcatenating the parent's full title.",
            "line": " test/js/mocha.js:4511"
        },
        {
            "message": "Missing item type\nReturn the total number of tests.",
            "line": " test/js/mocha.js:4527"
        },
        {
            "message": "Missing item type\nIterates through each suite recursively to find\nall tests. Applies a function in the format\n`fn(test)`.",
            "line": " test/js/mocha.js:4540"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:4562"
        },
        {
            "message": "Missing item type\nExpose `Test`.",
            "line": " test/js/mocha.js:4568"
        },
        {
            "message": "Missing item type\nInitialize a new `Test` with the given `title` and callback `fn`.",
            "line": " test/js/mocha.js:4574"
        },
        {
            "message": "Missing item type\nInherit from `Runnable.prototype`.",
            "line": " test/js/mocha.js:4588"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " test/js/mocha.js:4600"
        },
        {
            "message": "Missing item type\nIgnored directories.",
            "line": " test/js/mocha.js:4609"
        },
        {
            "message": "Missing item type\nEscape special characters in the given string of html.",
            "line": " test/js/mocha.js:4615"
        },
        {
            "message": "Missing item type\nArray#forEach (<=IE8)",
            "line": " test/js/mocha.js:4631"
        },
        {
            "message": "Missing item type\nArray#indexOf (<=IE8)",
            "line": " test/js/mocha.js:4645"
        },
        {
            "message": "Missing item type\nArray#reduce (<=IE8)",
            "line": " test/js/mocha.js:4662"
        },
        {
            "message": "Missing item type\nArray#filter (<=IE8)",
            "line": " test/js/mocha.js:4681"
        },
        {
            "message": "Missing item type\nObject.keys (<=IE8)",
            "line": " test/js/mocha.js:4700"
        },
        {
            "message": "Missing item type\nWatch the given `files` for changes\nand invoke `fn(file)` on modification.",
            "line": " test/js/mocha.js:4721"
        },
        {
            "message": "Missing item type\nIgnored files.",
            "line": " test/js/mocha.js:4740"
        },
        {
            "message": "Missing item type\nLookup files in the given `dir`.",
            "line": " test/js/mocha.js:4748"
        },
        {
            "message": "Missing item type\nCompute a slug from the given `str`.",
            "line": " test/js/mocha.js:4772"
        },
        {
            "message": "Missing item type\nStrip the function definition from `str`,\nand re-indent for pre whitespace.",
            "line": " test/js/mocha.js:4787"
        },
        {
            "message": "Missing item type\nEscape regular expression characters in `str`.",
            "line": " test/js/mocha.js:4805"
        },
        {
            "message": "Missing item type\nTrim the given `str`.",
            "line": " test/js/mocha.js:4817"
        },
        {
            "message": "Missing item type\nParse the given `qs`.",
            "line": " test/js/mocha.js:4829"
        },
        {
            "message": "Missing item type\nHighlight the given string of `js`.",
            "line": " test/js/mocha.js:4848"
        },
        {
            "message": "Missing item type\nHighlight the contents of tag `name`.",
            "line": " test/js/mocha.js:4868"
        },
        {
            "message": "Missing item type\nNode shims.\n\nThese are meant only to allow\nmocha.js to run untouched, not\nto allow running node code in\nthe browser.",
            "line": " test/js/mocha.js:4883"
        },
        {
            "message": "Missing item type\nnext tick implementation.",
            "line": " test/js/mocha.js:4897"
        },
        {
            "message": "Missing item type\nRemove uncaughtException listener.",
            "line": " test/js/mocha.js:4925"
        },
        {
            "message": "Missing item type\nImplements uncaughtException listener.",
            "line": " test/js/mocha.js:4935"
        },
        {
            "message": "Missing item type\nExpose mocha.",
            "line": " test/js/mocha.js:4948"
        },
        {
            "message": "Missing item type\nOverride ui to ensure that the ui functions are initialized.\nNormally this would happen in Mocha.prototype.loadFiles.",
            "line": " test/js/mocha.js:4955"
        },
        {
            "message": "Missing item type\nSetup mocha with the given setting options.",
            "line": " test/js/mocha.js:4966"
        },
        {
            "message": "Missing item type\nRun mocha, returning the Runner.",
            "line": " test/js/mocha.js:4976"
        }
    ]
}